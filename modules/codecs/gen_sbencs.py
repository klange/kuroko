import json

print("# Generated by gen_sbencs.py from WHATWG encodings.json and indexes.json")
print()
print("from codecs import infrastructure")

with open("indexes.json") as f:
    indices = json.load(f)

def build_sbmap(name):
    if name == "iso-8859-8-i":
        name = "iso-8859-8"
    encoding_map = {}
    decoding_map = {}
    for n, i in enumerate(indices[name]):
        if i != None:
            decoding_map[n + 0x80] = i
            encoding_map[i] = n + 0x80
    return encoding_map, decoding_map

template = """
class {idname}IncrementalEncoder(infrastructure.AsciiIncrementalEncoder):
    name = {mainlabel!r}
    webname = {weblabel!r}
    encoding_map = {encmap!r}

class {idname}IncrementalDecoder(infrastructure.AsciiIncrementalDecoder):
    name = {mainlabel!r}
    webname = {weblabel!r}
    decoding_map = {decmap!r}

infrastructure.register_kuroko_codec(
    {labels!r}, 
    {idname}IncrementalEncoder, 
    {idname}IncrementalDecoder)
"""

# Places where the WHATWG encoding "name" is actually the name of a similar encoding aliased
#   together. Granted, this is not very common for single byte encodings (only "KOI8-U" being
#   KOI8-RU comes to mind, since e.g. Windows-1252 is named Windows-1252 with "ISO-8859-1"
#   merely an alias) but it is, importantly, the rule rather than the exception for the CJK
#   codecs (e.g. Windows-31J is an alias of "Shift JIS" which is actually Windows-31J).
realname = {"koi8-u": "koi8-ru"}

with open("encodings.json") as f:
    for i in json.load(f):
        if i["heading"] == "Legacy single-byte encodings":
            for enc in i["encodings"]:
                whatwgname = enc["name"].lower()
                name = realname.get(whatwgname, whatwgname)
                labels = enc["labels"]
                encoding_map, decoding_map = build_sbmap(whatwgname)
                idname = name.title().replace("-", "")
                print(template.format(mainlabel=name, encmap=encoding_map, weblabel=whatwgname,
                        decmap=decoding_map, labels=labels, idname=idname))









